/* Auto-generated by genmsg_cpp for file /opt/ros/electric/stacks/hrl/hrl_srvs/srv/Int_Int.srv */
#ifndef HRL_SRVS_SERVICE_INT_INT_H
#define HRL_SRVS_SERVICE_INT_INT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace hrl_srvs
{
template <class ContainerAllocator>
struct Int_IntRequest_ {
  typedef Int_IntRequest_<ContainerAllocator> Type;

  Int_IntRequest_()
  : a(0)
  {
  }

  Int_IntRequest_(const ContainerAllocator& _alloc)
  : a(0)
  {
  }

  typedef int8_t _a_type;
  int8_t a;


private:
  static const char* __s_getDataType_() { return "hrl_srvs/Int_IntRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "4eec2979cc688371cc0e7f01aea37ad1"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "e4f49179affdfe2550700dff2405e153"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int8 a\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, a);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, a);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(a);
    return size;
  }

  typedef boost::shared_ptr< ::hrl_srvs::Int_IntRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::hrl_srvs::Int_IntRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct Int_IntRequest
typedef  ::hrl_srvs::Int_IntRequest_<std::allocator<void> > Int_IntRequest;

typedef boost::shared_ptr< ::hrl_srvs::Int_IntRequest> Int_IntRequestPtr;
typedef boost::shared_ptr< ::hrl_srvs::Int_IntRequest const> Int_IntRequestConstPtr;


template <class ContainerAllocator>
struct Int_IntResponse_ {
  typedef Int_IntResponse_<ContainerAllocator> Type;

  Int_IntResponse_()
  : r(0)
  {
  }

  Int_IntResponse_(const ContainerAllocator& _alloc)
  : r(0)
  {
  }

  typedef int8_t _r_type;
  int8_t r;


private:
  static const char* __s_getDataType_() { return "hrl_srvs/Int_IntResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "be4e2541e679372b3247c20e1aef4ccf"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "e4f49179affdfe2550700dff2405e153"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int8 r\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, r);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, r);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(r);
    return size;
  }

  typedef boost::shared_ptr< ::hrl_srvs::Int_IntResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::hrl_srvs::Int_IntResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct Int_IntResponse
typedef  ::hrl_srvs::Int_IntResponse_<std::allocator<void> > Int_IntResponse;

typedef boost::shared_ptr< ::hrl_srvs::Int_IntResponse> Int_IntResponsePtr;
typedef boost::shared_ptr< ::hrl_srvs::Int_IntResponse const> Int_IntResponseConstPtr;

struct Int_Int
{

typedef Int_IntRequest Request;
typedef Int_IntResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct Int_Int
} // namespace hrl_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::hrl_srvs::Int_IntRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::hrl_srvs::Int_IntRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::hrl_srvs::Int_IntRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4eec2979cc688371cc0e7f01aea37ad1";
  }

  static const char* value(const  ::hrl_srvs::Int_IntRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4eec2979cc688371ULL;
  static const uint64_t static_value2 = 0xcc0e7f01aea37ad1ULL;
};

template<class ContainerAllocator>
struct DataType< ::hrl_srvs::Int_IntRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "hrl_srvs/Int_IntRequest";
  }

  static const char* value(const  ::hrl_srvs::Int_IntRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::hrl_srvs::Int_IntRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 a\n\
\n\
";
  }

  static const char* value(const  ::hrl_srvs::Int_IntRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::hrl_srvs::Int_IntRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::hrl_srvs::Int_IntResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::hrl_srvs::Int_IntResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::hrl_srvs::Int_IntResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "be4e2541e679372b3247c20e1aef4ccf";
  }

  static const char* value(const  ::hrl_srvs::Int_IntResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xbe4e2541e679372bULL;
  static const uint64_t static_value2 = 0x3247c20e1aef4ccfULL;
};

template<class ContainerAllocator>
struct DataType< ::hrl_srvs::Int_IntResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "hrl_srvs/Int_IntResponse";
  }

  static const char* value(const  ::hrl_srvs::Int_IntResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::hrl_srvs::Int_IntResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 r\n\
\n\
\n\
";
  }

  static const char* value(const  ::hrl_srvs::Int_IntResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::hrl_srvs::Int_IntResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::hrl_srvs::Int_IntRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.a);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct Int_IntRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::hrl_srvs::Int_IntResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.r);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct Int_IntResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<hrl_srvs::Int_Int> {
  static const char* value() 
  {
    return "e4f49179affdfe2550700dff2405e153";
  }

  static const char* value(const hrl_srvs::Int_Int&) { return value(); } 
};

template<>
struct DataType<hrl_srvs::Int_Int> {
  static const char* value() 
  {
    return "hrl_srvs/Int_Int";
  }

  static const char* value(const hrl_srvs::Int_Int&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<hrl_srvs::Int_IntRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e4f49179affdfe2550700dff2405e153";
  }

  static const char* value(const hrl_srvs::Int_IntRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<hrl_srvs::Int_IntRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "hrl_srvs/Int_Int";
  }

  static const char* value(const hrl_srvs::Int_IntRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<hrl_srvs::Int_IntResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e4f49179affdfe2550700dff2405e153";
  }

  static const char* value(const hrl_srvs::Int_IntResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<hrl_srvs::Int_IntResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "hrl_srvs/Int_Int";
  }

  static const char* value(const hrl_srvs::Int_IntResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // HRL_SRVS_SERVICE_INT_INT_H

